#!/bin/bash -x

echo "!!! WELCOME  TO  TIC-TAC-TOE GAME ... !!!"

count=0
player=" "
symbol1="O"
symbol2="O"

declare -a board
board=( 1 2 3 4 5 6 7 8 9 )

function getSymbol(){
	if [[ $((RANDOM%2)) -eq 0 ]]
	then
		echo "Player 1 Will Play First"
		echo "Player 1  Symbol is = X"
		player="user"
	else
		echo "Computer Will Play First"
		echo "Computer Symbol is = X"
		player="computer"
	fi
}
getSymbol

function getBoardPrint(){
	echo "  ____ ____ ____ "
	echo " |_${board[0]}__""|""_${board[1]}__""|""_${board[2]}__""|"
	echo " |_${board[3]}__""|""_${board[4]}__""|""_${board[5]}__""|"
	echo " |_${board[6]}__""|""_${board[7]}__""|""_${board[8]}__""|"
	
}
getBoardPrint

function checkForSides(){
	temp=0
	 for (( i=0;i<9;i++ ))
   do
      if [[ ${board[$i]} != "X" && ${board[$i]} != "O" ]]
      then
         if [[ $((${board[$i]}%2)) -eq 0 ]]
         then
            temp=1
            echo ${board[$i]}
            break
         fi
      fi
   done
}

function checkForCenter(){
	if [[ ${board[4]} != "O" && ${board[4]} != "X" ]]
	then
		echo ${board[4]}
	else
      value=$(checkForSides)
      echo $value
   fi
}

function checkForCorner(){
	temp=0
	for (( i=0;i<9;i++ ))
	do
		if [[ $((${board[$i]}%2)) -eq 1 ]]
		then
	 		if [[ $i -ne 4 && ${board[$i]}!=X && ${board[$i]}!=O ]]
      	then

				temp=1
				echo ${board[$i]}
				break
			fi
		fi
	done
	if [[ $temp -eq 0 ]]
	then
		centerValue=$(checkForCenter)
		echo $centerValue
	fi
}

function getCellInput(){
	temp=0
	for(( i=0;i<9;i++ ))
	do
		#blockcondition For row
		if [[ ${board[$i]} == $symbol1  && ${board[(($i+1))]} == $symbol1 ]]
		then
		if [ ${board[(($i+2))]} != X ] && [${board[(($i+2))]} != O]
		then
			temp=1
			echo ${board[(($i+2))]}
			break
		fi
	
		elif [[ ${board[(($i+1))]} == $symbol1  && ${board[(($i+2))]} == $symbol1 ]]
		then
		if [ ${board[(($i+1))]} != X ] && [${board[(($i+2))]} != O]
		then
			temp=1
			echo ${board[$i]}
			break
		fi
		elif [[ ${board[$i]} == $symbol1  && ${board[(($i+2))]} == $symbol1 ]]
		then
			if [[ ${board[$i]} !=X  && ${board[(($i+2))]} !=O ]]
			then
				temp=1
				echo ${board[(($i+1))]}
				break
			fi

		#blockCondition for column
		elif [[ ${board[$i]} == $symbol1  && ${board[(($i+3))]} == $symbol1 ]]
		then
			if [[ ${board[$i]} != X && ${board[(($i+3))]} != O ]]
			then
			temp=1
			echo ${board[(($i+6))]}
			break
			fi
		elif [[ ${board[(($i+3))]} == $symbol1  && ${board[(($i+6))]} == $symbol1 ]]
		then
			if [[ ${board[(($i+3))]} != X  && ${board[(($i+6))]} != O ]]
			then
				temp=1
				echo ${board[$i]}
				break
			fi
		elif [[ ${board[$i]} == $symbol1  && ${board[(($i+6))]} == $symbol1 ]]
		then
			if [[ ${board[$i]} != X  && ${board[(($i+6))]} != O ]]
			then
         	temp=1
				echo ${board[(($i+3))]}
				break
			fi
		#blockCondition for diagonal
		elif [[ $i -eq 0 && ${board[$i]} == $symbol1  && ${board[$(($i+4))]} == $symbol1 ]]
   	then
			if [[ $i -eq 0 && ${board[$i]} != X && ${board[$(($i+4))]} != O ]]
			then
      		temp=1
      		echo ${board[$(($i+8))]}
				break
			fi
   	elif [[ $i -eq 0 && ${board[$(($i+4))]} == $symbol1  && ${board[$(($i+8))]} == $symbol1 ]]
   	then
			if [[ $i -eq 0 && ${board[$(($i+4))]} !=  && ${board[$(($i+8))]} != O ]]
      	then
				temp=1
      		echo ${board[$i]}
				break
			fi 
   	elif [[ $i -eq 0 && ${board[$i]} == $symbol1  && ${board[$(($i+8))]} == $symbol1 ]]
   	then
			if [[ $i -eq 0 && ${board[$i]} != $symbol1  && ${board[$(($i+8))]} != $symbol1 ]]
			then
      		temp=1
      		echo ${board[$(($i+4))]}
				break
			fi 
   	elif [[ $i -eq 0 && ${board[$i+2]} == $symbol1 && ${board[$(($i+4))]} == $symbol1 ]]
   	then  
			if [[ $i -eq 0 && ${board[$i+2]} != $symbol1 && ${board[$(($i+4))]} != $symbol1 ]]
			then
      		temp=1
      		echo ${board[$(($i+6))]}
				break
			fi
   	elif [[ $i -eq 0 && ${board[$i+4]} == $symbol1  && ${board[$(($i+6))]} == $symbol1 ]]
   	then 
			if [[ $i -eq 0 && ${board[$i+4]} != $symbol1  && ${board[$(($i+6))]} != $symbol1 ]]
 			then
      		temp=1
      		echo ${board[$(($i+2))]}
				break
			fi
   	elif [[ $i -eq 0 && ${board[$i+2]} == $symbol1  && ${board[$(($i+6))]} == $symbol1 ]]
   	then 
			 if [[ $i -eq 0 && ${board[$i+2]} != $symbol1  && ${board[$(($i+6))]} != $symbol1 ]]
      	then  
 
      		temp=1
      		echo ${board[$(($i+4))]}
				break
			fi
   	fi
	done
	if [ $temp -eq 0 ]
	then		
		cornerValue=$(checkForCorner)
  		echo $cornerValue
	fi